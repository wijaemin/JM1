<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="member">

	<!-- 
		회원에 대한 복합 검색 구현
		
		-회원 아이디(memberId)는 정확하게 일치할 때 검색
		-회원 닉네임(memberNickname)은 유사한거 검색
		-회원 전화번호(memberContact)는 정확하게 일치할 때 검색
		-회원 생년월일은 시작(memberBirthBegin)과 끝(memberBirthEnd)을 입력하여 구간 검색
		-회원 등급은 주어진 리스트(memberLevelList)에 포함되어 있는지 검색
		-회원 포인트는 최소(memberPointMin)와 최대(memberPointMax)를 입력
	 <![CDATA[]]>
	 -->

    <select id="complexSearch" resultType="MemberDto">
    <!-- Top N Query Header 불러오기 -->
    <include refid= "pagingHeader"></include>
	  
	  <!--  메인 조회 구문  -->
	  select * from member
	  <!--  조건 구문 -->
	  <where>
	  <!--  아이디(일치) -->
	  <if test ="memberId != null">
	  	and member_id=#{memberId}
	  </if>
	  <!-- 닉네임(유사) -->
	  <if test = "memberNickname != null">
	  	and instr(member_nickname, #{memberNickname}) >0
	  </if>
	  <!-- 전화번호(일치) -->
	  <if test="memberContact != null">
	  	and member_contact=#{memberContact}
	  </if>
	  <!-- 생년월일(구간) -->
	  <choose>
	  <when test="memberBirthBegin != null and memberBirthEnd != null">
	  and
	  	to_date(member_birth,'YYYY-MM-DD') 
	  	between
	  	  to_date(#{memberBirthBegin},'YYYY-MM-DD')
	  	  and
	  	  to_date(#{memberBirthEnd},'YYYY-MM-DD')
	  </when>
	  <when test="memberBirthBegin != null">
	  and
	    to_date(member_birth,'YYYY-MM-DD')
    	  >= to_date(#{memberBirthBegin},'YYYY-MM-DD')
	  </when>
	  <when test="memberBirthEnd != null">
	  <![CDATA[
	    and
	    to_date(member_birth,'YYYY-MM-DD')
	      <= to_date(#{memberBirthEnd},'YYYY-MM-DD')
	  ]]>
	  </when>
	  </choose>
	   <!-- 포인트(구간) -->
	  <choose>
	    <when test="memberPointMin !=null and memberPointMax !=null">
	      <![CDATA[
		  and member_point >= #{memberPointMin} and member_point <= #{memberPointMax}
	      ]]>
	    </when>
	    <when test="memberPointMin !=null">
	      <![CDATA[
	      and member_point >= #{memberPointMin}
	      ]]>
	    </when>
	    <when test="memberPointMax !=null">
	      <![CDATA[
	      and member_point <= #{memberPointMax}
	      ]]>
	    </when>
	  </choose>
	  <!-- 등급 목록 포함 검사 -->
	  <if test="memberLevelList !=null and memberLevelList.size()>0">
	    and member_level in
	    <foreach collection="memberLevelList" open ="(" close=")" separator="," item="level">
	      #{level}
	    </foreach>
	  </if>
	  </where>
	  <!-- 정렬 구문 -->
	  <if test="orderList !=null and orderList.size() > 0">
	  order by
	  <foreach collection="orderList" separator="," item ="order">
	  ${order}
	  </foreach>
	  </if>
	<!-- Top N Query Footer 불러오기 -->
	<include refid="pagingFooter"></include>	  
    </select>
    
    
    
    <!-- Top N Query를 위한 코드 조각 생성(상/하) -->
    <sql id="pagingHeader">
      <if test="begin != null and end != null">
      select * from(
      	select rownum rn, TMP.* from(
      </if>
    </sql>
    <sql id="pagingFooter">
	  <if test="begin != null and end != null">
		)TMP
	  ) where rn between #{begin} and #{end}
	  </if>
	</sql>
</mapper>